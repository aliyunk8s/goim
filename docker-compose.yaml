version: '3.7'

services:
  comet:
    build:
      context: .
      dockerfile: Dockerfile
    image: maguowei/goim
    restart: always
    environment:
      - "DEBUG=${DEBUG}"
    ports:
      - "${API_PORT}:8000"
    depends_on:
      - redis
      - zookeeper
      - kafka
    entrypoint: comet -conf=target/comet.toml -region=sh -zone=sh001 -deploy.env=dev -weight=10 -addrs=127.0.0.1 -debug=true 2>&1

  logic:
    build:
      context: .
      dockerfile: Dockerfile
    image: maguowei/goim
    restart: always
    environment:
      - "DEBUG=${DEBUG}"
    ports:
      - "${API_PORT}:8000"
    depends_on:
      - redis
      - zookeeper
      - kafka
    entrypoint: logic -conf=target/logic.toml -region=sh -zone=sh001 -deploy.env=dev -weight=10 2>&1

  job:
    build:
      context: .
      dockerfile: Dockerfile
    image: maguowei/goim
    restart: always
    environment:
      - "DEBUG=${DEBUG}"
    ports:
      - "${API_PORT}:8000"
    depends_on:
      - redis
      - zookeeper
      - kafka
    entrypoint: job -conf=target/job.toml -region=sh -zone=sh001 -deploy.env=dev 2>&1

  redis:
    image: redis
    restart: always
    ports:
      - 6379:6379
    volumes:
      - redis:/data

  zookeeper:
    image: confluentinc/cp-zookeeper
    restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka
    restart: always
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

volumes:
  redis:
